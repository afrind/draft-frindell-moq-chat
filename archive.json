{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-10-22T00:42:27.780428+00:00",
  "repo": "afrind/draft-frindell-moq-chat",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOJ8iUAc5eeW1p",
      "title": "Use a virtual control tracks for joining/leaving the chat",
      "url": "https://github.com/afrind/draft-frindell-moq-chat/pull/1",
      "state": "CLOSED",
      "author": "afrind",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-11-02T20:54:59Z",
      "updatedAt": "2024-10-08T21:05:37Z",
      "baseRepository": "afrind/draft-frindell-moq-chat",
      "baseRefName": "main",
      "baseRefOid": "bd5683e76624510b477ba86891f8880b22f057c0",
      "headRepository": "afrind/draft-frindell-moq-chat",
      "headRefName": "control-track",
      "headRefOid": "826b8da866ef7898e151f764453c148511382959",
      "closedAt": "2024-10-08T21:05:37Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Assuming this is an accurate description of your app, please land it!",
          "createdAt": "2023-11-15T23:55:47Z",
          "updatedAt": "2023-11-15T23:55:47Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "OWNER",
          "body": "Overtaken by events",
          "createdAt": "2024-10-08T21:05:37Z",
          "updatedAt": "2024-10-08T21:05:37Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOJ8iUAc5gDWy1",
      "title": "for catalog, group = stream",
      "url": "https://github.com/afrind/draft-frindell-moq-chat/pull/2",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-11-21T18:09:09Z",
      "updatedAt": "2023-11-21T18:15:45Z",
      "baseRepository": "afrind/draft-frindell-moq-chat",
      "baseRefName": "main",
      "baseRefOid": "fd3006e39bf2f01767958146be8ce89188d420f8",
      "headRepository": "martinduke/draft-frindell-moq-chat",
      "headRefName": "patch-1",
      "headRefOid": "f909cccbe9674a5e6d5999e7d320932e41e69305",
      "closedAt": "2023-11-21T18:15:45Z",
      "mergedAt": "2023-11-21T18:15:44Z",
      "mergedBy": "afrind",
      "mergeCommit": {
        "oid": "9870966e29f1247fbe96b3668058e880621513fb"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOJ8iUAc59RsGE",
      "title": "Update moq-chat to utiltize draft-06 features",
      "url": "https://github.com/afrind/draft-frindell-moq-chat/pull/3",
      "state": "MERGED",
      "author": "afrind",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-01T15:45:55Z",
      "updatedAt": "2024-10-08T20:02:31Z",
      "baseRepository": "afrind/draft-frindell-moq-chat",
      "baseRefName": "main",
      "baseRefOid": "9870966e29f1247fbe96b3668058e880621513fb",
      "headRepository": "afrind/draft-frindell-moq-chat",
      "headRefName": "draft-06",
      "headRefOid": "c0b5df971f445199f4e8b0dcc552131a83f1546a",
      "closedAt": "2024-10-08T20:02:31Z",
      "mergedAt": "2024-10-08T20:02:31Z",
      "mergedBy": "afrind",
      "mergeCommit": {
        "oid": "e76eb7d2a6d653401d7bc54383617a8d58431dae"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ8iUAc6LhhEH",
          "commit": {
            "abbreviatedOid": "df38141"
          },
          "author": "suhasHere",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T16:03:13Z",
          "updatedAt": "2024-10-01T16:03:13Z",
          "comments": [
            {
              "originalPosition": 124,
              "body": "curious to hear your thinking on how does search for set of chats ( say chat with alice last week) work (when cached)",
              "createdAt": "2024-10-01T16:03:13Z",
              "updatedAt": "2024-10-01T16:03:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ8iUAc6LhhQA",
          "commit": {
            "abbreviatedOid": "df38141"
          },
          "author": "suhasHere",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T16:03:24Z",
          "updatedAt": "2024-10-01T16:03:24Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "like this !!",
              "createdAt": "2024-10-01T16:03:24Z",
              "updatedAt": "2024-10-01T16:03:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ8iUAc6LhtMq",
          "commit": {
            "abbreviatedOid": "df38141"
          },
          "author": "huitema",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "The PR proposes solving the discovery issue by having all test-chat clients connect to the same relay. The relay will broadcast the announces to all the clients that have subscribed to the chat's namespace. That works OK for the purpose of testing the MoQ protocol in the short term.",
          "createdAt": "2024-10-01T16:26:47Z",
          "updatedAt": "2024-10-01T16:26:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ8iUAc6Lla3E",
          "commit": {
            "abbreviatedOid": "df38141"
          },
          "author": "afrind",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T03:24:34Z",
          "updatedAt": "2024-10-02T03:24:34Z",
          "comments": [
            {
              "originalPosition": 124,
              "body": "In this design, track names contain a timestamp of when the chat started.  So you could request all the chat tracks that cover that range, plus the last one that started before.\r\n\r\nChristian rightly pointed out that this protocol should have a timestamp in the object payload also which would help support that use case. \r\n\r\n@suhasHere Do you have an alternate proposal?",
              "createdAt": "2024-10-02T03:24:34Z",
              "updatedAt": "2024-10-02T03:24:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ8iUAc6LlbKz",
          "commit": {
            "abbreviatedOid": "df38141"
          },
          "author": "afrind",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T03:26:40Z",
          "updatedAt": "2024-10-02T03:27:13Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "This can be updated, since upon rejoining they start a new track.",
              "createdAt": "2024-10-02T03:26:41Z",
              "updatedAt": "2024-10-02T03:27:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ8iUAc6MPagJ",
          "commit": {
            "abbreviatedOid": "1357e0c"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T20:14:33Z",
          "updatedAt": "2024-10-07T20:31:10Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "It's a useful improvement to make the relay/server dumber.",
              "createdAt": "2024-10-07T20:14:33Z",
              "updatedAt": "2024-10-07T20:31:10Z"
            },
            {
              "originalPosition": 73,
              "body": "Are there any restrictions besides that it monotonically increase? Can one publisher start at 1970 and the other at 2023? What if one uses seconds and another milliseconds.\r\n\r\nI  imagine that if the units are too big you'll have collisions, but aside from that I think publishers can do whatever they want?",
              "createdAt": "2024-10-07T20:17:20Z",
              "updatedAt": "2024-10-07T20:31:10Z"
            },
            {
              "originalPosition": 88,
              "body": "```suggestion\r\nwith a namespace prefix (\"moq-chat\", \\<id\\>) in order to receive all ANNOUNCE\r\n```",
              "createdAt": "2024-10-07T20:18:05Z",
              "updatedAt": "2024-10-07T20:31:10Z"
            },
            {
              "originalPosition": 90,
              "body": "Not sure if this an MOQT question or a chat question, but does the relay forward SUBSCRIBE_NAMESPACE to everyone that has ANNOUNCEd something within the namespace, or does the relay keep track of ANNOUNCE so it can send ANNOUNCE in response to later SUBSCRIBE_NAMESPACE? What state does the relay keep?\r\n\r\nMoQT refers to the \"publisher\" as the responder, which can include the relay. So I guess the relay is tracking all the ANNOUNCEs it's seen, and maybe has to prune them when the session goes away?",
              "createdAt": "2024-10-07T20:20:31Z",
              "updatedAt": "2024-10-07T20:31:10Z"
            },
            {
              "originalPosition": 121,
              "body": "but not END_OF_SUBGROUP?\r\n\r\n(this works for me, just want to clarify)",
              "createdAt": "2024-10-07T20:30:09Z",
              "updatedAt": "2024-10-07T20:31:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ8iUAc6MQF2b",
          "commit": {
            "abbreviatedOid": "1357e0c"
          },
          "author": "afrind",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "Thanks for the feedback.  Should I normalize the timestamp in the track name?",
          "createdAt": "2024-10-07T22:15:24Z",
          "updatedAt": "2024-10-07T22:22:11Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I didn't put any restrictions here yet since there's no purpose for them yet.  I could say it needs to be seconds since 1970 or something, which would facilitate loading chat history without a catalog or timeline track.\r\n\r\nDo you want me to make it restrictive?",
              "createdAt": "2024-10-07T22:15:24Z",
              "updatedAt": "2024-10-07T22:22:11Z"
            },
            {
              "originalPosition": 90,
              "body": "draft-06 doesn't specify if SUBSCRIBE_NAMESPACE is forwarded through a relay.  The use case would be relay-to-relay.\r\n\r\nA relay already needs to track a mapping from announcements to the sessions that announced them.  It uses this table to match incoming subscribes to the correct session(s).\r\n\r\nTo implement SUBSCRIBE_NAMESPACE in moxygen I did have to create a kind of tree-structure organized by namespace tuple, with a list of subscribed sessions at each level, and a session that has announced that namespace, if any.  I suppose when I support > 1 announcer per namespace I need that to be a list.\r\n\r\nAnd when a session disappears you need to remove old announcements, and subscribed namespaces (and subscriptions).",
              "createdAt": "2024-10-07T22:20:40Z",
              "updatedAt": "2024-10-07T22:22:11Z"
            },
            {
              "originalPosition": 121,
              "body": "EOG implies EOSG",
              "createdAt": "2024-10-07T22:21:38Z",
              "updatedAt": "2024-10-07T22:22:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ8iUAc6MZC-B",
          "commit": {
            "abbreviatedOid": "1357e0c"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T19:38:12Z",
          "updatedAt": "2024-10-08T19:38:12Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "No; I just think the spec should be explicit about it.",
              "createdAt": "2024-10-08T19:38:12Z",
              "updatedAt": "2024-10-08T19:38:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ8iUAc6MZDTv",
          "commit": {
            "abbreviatedOid": "1357e0c"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T19:38:54Z",
          "updatedAt": "2024-10-08T19:38:54Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "OK. More text in the doc is always helpful, even if it's non-normative.",
              "createdAt": "2024-10-08T19:38:54Z",
              "updatedAt": "2024-10-08T19:38:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ8iUAc6MZDeZ",
          "commit": {
            "abbreviatedOid": "1357e0c"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T19:39:17Z",
          "updatedAt": "2024-10-08T19:39:18Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "Agreed. ",
              "createdAt": "2024-10-08T19:39:18Z",
              "updatedAt": "2024-10-08T19:39:18Z"
            }
          ]
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOJ8iUAc59_7mG",
      "title": "More guidance about how to leave the chat",
      "url": "https://github.com/afrind/draft-frindell-moq-chat/pull/4",
      "state": "MERGED",
      "author": "afrind",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-08T21:06:15Z",
      "updatedAt": "2024-10-09T18:49:01Z",
      "baseRepository": "afrind/draft-frindell-moq-chat",
      "baseRefName": "main",
      "baseRefOid": "e76eb7d2a6d653401d7bc54383617a8d58431dae",
      "headRepository": "afrind/draft-frindell-moq-chat",
      "headRefName": "leave-the-chat",
      "headRefOid": "fa374c39bc650f17948e622a801dc7bd3316cc75",
      "closedAt": "2024-10-09T18:49:01Z",
      "mergedAt": "2024-10-09T18:49:01Z",
      "mergedBy": "afrind",
      "mergeCommit": {
        "oid": "0d61cc2364a9b84a46523c39fb970bb296bba9d5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ8iUAc6MZrdA",
          "commit": {
            "abbreviatedOid": "a6a562a"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T21:09:19Z",
          "updatedAt": "2024-10-08T21:09:20Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nthey rejoin.  Finally, they SHOULD send an UNSUBSCRIBE message for any\r\n```",
              "createdAt": "2024-10-08T21:09:19Z",
              "updatedAt": "2024-10-08T21:09:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ8iUAc6MZruw",
          "commit": {
            "abbreviatedOid": "a6a562a"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-08T21:10:05Z",
          "updatedAt": "2024-10-08T21:10:05Z",
          "comments": []
        }
      ]
    }
  ]
}